import{installSourceMapSupport as p,transform as u}from"@esbuild-kit/core-utils";import _ from"get-tsconfig";import{init as h,parse as $}from"es-module-lexer";import{fileURLToPath as W}from"url";import v from"fs";const a=/\.([cm]?ts|[tj]sx)$/;let j=!1;h.then(()=>{j=!0});const w=t=>{const[o,s]=$(t);return o.length>0||s.length>0};function g(t){return j?w(t):h.then(()=>w(t))}var D=Object.defineProperty,b=Object.defineProperties,U=Object.getOwnPropertyDescriptors,y=Object.getOwnPropertySymbols,x=Object.prototype.hasOwnProperty,N=Object.prototype.propertyIsEnumerable,P=(t,o,s)=>o in t?D(t,o,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[o]=s,i=(t,o)=>{for(var s in o||(o={}))x.call(o,s)&&P(t,s,o[s]);if(y)for(var s of y(o))N.call(o,s)&&P(t,s,o[s]);return t},c=(t,o)=>b(t,U(o));const F=p(),O=_(),I=O==null?void 0:O.config,L=/\.\w+$/,l=[".js",".json",".ts",".tsx",".jsx"],R=[...l,...l.map(t=>`/index${t}`)],m=async function(t,o,s){if(t.startsWith("node:")&&(t=t.slice(5)),t.endsWith("/"))return m(`${t}index`,o,s);if(/\.[cm]js$/.test(t)&&a.test(o.parentURL)&&(t=`${t.slice(0,-2)}ts`),a.test(t))return c(i({},await s(t,o,s)),{format:"module"});if(t.endsWith(".json"))return c(i({},await s(t,o,s)),{format:"json"});try{const n=await s(t,o,s);return t.endsWith(".js")&&n.format==="commonjs"&&(n.format="module"),n}catch(n){if(n instanceof Error){if(n.code==="ERR_UNSUPPORTED_DIR_IMPORT")return m(`${t}/index`,o,s);if(n.code==="ERR_MODULE_NOT_FOUND"&&!L.test(t))for(const r of R)try{const e=t+(t.endsWith("/")&&r.startsWith("/")?r.slice(1):r);return c(i({},await s(e,o,s)),{format:r===".json"?"json":"module"})}catch{}}throw n}},T=async function(t,o,s){process.send&&process.send({type:"dependency",path:t}),t.endsWith(".json")&&(o.importAssertions.type="json");const n=await s(t,o,s);if(!n.source||t.includes("/node_modules/"))return n;const r=n.source.toString();if(a.test(t)){const e=await u(r,t,{format:"esm",tsconfigRaw:I});return e.map&&F.set(t,e.map),c(i({},o),{source:e.code})}return await g(r)||(n.format="commonjs"),n},E=_(),M=E==null?void 0:E.config,V=p(),A=async function(t,o,s){if(t.endsWith(".json"))return{format:"json"};if(a.test(t))return{format:"module"};const n=await s(t,o,s);if(t.endsWith(".js")&&(n.format==="commonjs"||n.format==="module")){const r=W(t),e=await v.promises.readFile(r,"utf8");n.format=await g(e)?"module":"commonjs"}return n},q=async function(t,o,s){const{url:n}=o;if(process.send&&process.send({type:"dependency",path:n}),a.test(n)){const r=await u(t.toString(),n,{format:"esm",tsconfigRaw:M});return r.map&&V.set(n,r.map),{source:r.code}}return s(t,o,s)},f=[16,12,0],d=process.version.slice(1).split(".").map(Number),S=(d[0]-f[0]||d[1]-f[1]||d[2]-f[2])<0,z=S?A:void 0,B=S?q:void 0;export{z as getFormat,T as load,m as resolve,B as transformSource};
